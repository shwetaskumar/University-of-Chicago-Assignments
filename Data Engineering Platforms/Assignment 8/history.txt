//4. Find the people who were the producer, writer, AND director (the same person who held all 3 roles) at the same time on a film. Return the names of the people and the titles of the films.
MATCH (p:Person)-[:PRODUCED]->(m:Movie)<-[:WROTE]->(p:Person)<-[:DIRECTED]->(m:Movie)
RETURN p.name AS `Producer, Writer, Director`, m.title AS Movie;

//5. Find all the actors that are exactly 3 degrees away from Tom Hanks.  NOTE: In this case, we want to define a "degree" as a common connection between two people.  So, if Tom Hanks is connected to Gary Sinise by way of them both acting in Apollo 13, then that connection has a path length of 2, and we would consider Gary Sinise to be 1 degree away from Tom Hanks since they both acted in the same movie.
MATCH (p:Person {name:"Tom Hanks"})-[*6]-(a:Person)
RETURN DISTINCT a.name AS Actor;

//6. Update database to reflect new name ("Larry Wachowski") for director "Lana Wachowski".
MATCH (p:Person {name: 'Lana Wachowski'})
SET p.name = 'Larry Wachowski'
RETURN p;

//7. Create a section of fun movies whose summary contains the keyword "fun".
MATCH (p:Person)-[r:REVIEWED]->(m:Movie)
WHERE r.summary CONTAINS 'fun'
CREATE (Fun)-[:IS_FUN]->(m)
RETURN p, m, r;

//8. List all the release years and count all movies released in that year.
MATCH (m:Movie)
WITH m.released AS `Released Year`, size(collect(m.title)) AS `Count of Movies`
RETURN `Released Year`, `Count of Movies`;

//9. List all the movies whose rating >= 90.
MATCH (p:Person)-[r:REVIEWED]->(m:Movie)
WHERE r.rating >= 90
RETURN m.title AS Movie;

//10. List the top producers who are most likely to entertain new movies production hint: Producers with most movies produced.
MATCH (p:Person)-[:PRODUCED]->(m:Movie)
WITH p, size(collect(m.title)) AS c
RETURN p.name AS Producer
ORDER BY c DESC
LIMIT 1;

//11. List all the movies along with a number of reviews received. order the results by a number of reviews in descending order.
MATCH (p:Person)-[r:REVIEWED]->(m:Movie)
WITH size(collect(r.rating)) AS review, m
RETURN m.title AS Movie, review AS `Number of reviews Received`
ORDER BY `Number of reviews Received` DESC;

//12. Find the shortest path between movies "The Matrix" and "The Matrix Reloaded".
MATCH s=shortestPath((m:Movie {title:"The Matrix"})-[*]-(m1:Movie {title:"The Matrix Reloaded"}))
RETURN s;

//13. List all the writers and the list of movies they have written.
MATCH (p:Person)-[:WROTE]->(m:Movie)
WITH p, collect(m.title) AS m
RETURN p.name AS Writer, m AS Movies;

//14. List top 15 actors who have co-acted with each other the most. Ignore The Matrix trilogy for this analysis.
MATCH (p:Person)-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(coActors:Person)
WHERE NOT m.title IN ['The Matrix', 'The Matrix Reloaded', 'The Matrix Revolutions']
WITH p, size(collect(coActors.name)) AS coActors
RETURN p.name AS Actor
ORDER BY coActors DESC
LIMIT 15;